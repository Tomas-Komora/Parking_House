updateCarPark

→ Create new car park
  [16. 6. 2022, 14:16:53]  POST http://localhost:8080/carparks  
  201 Created ★ 42ms time ★ 439B↑ 146B↓ size ★ 10↑ 2↓ headers ★ 0 cookies
  ┌ ↑ raw ★ 96B
  │ {
  │   "id": 28319418,
  │   "name": "Park1",
  │   "address": "Address1",
  │   "prices": 10,
  │   "floors": []
  │ }
  └ 
  ┌ ↓ application/json ★ text ★ json ★ utf8 ★ 70B
  │ {"id":118,"name":"Park1","address":"Address1","prices"
  │ :10,"floors":[]}
  └
  prepare   wait   dns-lookup   tcp-handshake   transfer-start   download   process   total 
  36ms      9ms    2ms          1ms             19ms             8ms        520µs     78ms  

  [14:16:53]  √  createAndSetCarParkId

→ Update car park
  [16. 6. 2022, 14:16:53]  PUT http://localhost:8080/carparks/118  
  405 Method Not Allowed ★ 7ms time ★ 437B↑ 81B↓ size ★ 10↑ 2↓ headers ★ 0 cookies
  ┌ ↑ raw ★ 91B
  │ {
  │   "id": 118,
  │   "name": "Park2",
  │   "address": "Address2",
  │   "prices": 12,
  │   "floors": []
  │ }
  └ 
  ↓ text/plain ★ text ★ plain ★ utf8

  prepare   wait    dns-lookup   tcp-handshake   transfer-start   download   process   total 
  1ms       827µs   (cache)      (cache)         2ms              2ms        87µs      8ms   

  [14:16:53] 1. getUpdatedCarPark

→ Get carp park by id
  [16. 6. 2022, 14:16:53]  GET http://localhost:8080/carparks/118  
  200 OK ★ 14ms time ★ 294B↑ 141B↓ size ★ 8↑ 2↓ headers ★ 0 cookies
  ┌ ↓ application/json ★ text ★ json ★ utf8 ★ 70B
  │ {"id":118,"name":"Park1","address":"Address1","prices"
  │ :10,"floors":[]}
  └
  prepare   wait    dns-lookup   tcp-handshake   transfer-start   download   process   total 
  3ms       843µs   (cache)      (cache)         10ms             2ms        115µs     17ms  

  [14:16:53] 2. getUpdatedCarPark

┌─────────────────────────┬───────────────────┬──────────────────┐
│                         │          executed │           failed │
├─────────────────────────┼───────────────────┼──────────────────┤
│              iterations │                 1 │                0 │
├─────────────────────────┼───────────────────┼──────────────────┤
│                requests │                 3 │                0 │
├─────────────────────────┼───────────────────┼──────────────────┤
│            test-scripts │                 6 │                0 │
├─────────────────────────┼───────────────────┼──────────────────┤
│      prerequest-scripts │                 3 │                0 │
├─────────────────────────┼───────────────────┼──────────────────┤
│              assertions │                 3 │                2 │
├─────────────────────────┴───────────────────┴──────────────────┤
│ total run duration: 472ms                                      │
├────────────────────────────────────────────────────────────────┤
│ total data received: 140B (approx)                             │
├────────────────────────────────────────────────────────────────┤
│ average response time: 21ms [min: 7ms, max: 42ms, s.d.: 15ms]  │
├────────────────────────────────────────────────────────────────┤
│ average DNS lookup time: 2ms [min: 2ms, max: 2ms, s.d.: 0µs]   │
├────────────────────────────────────────────────────────────────┤
│ average first byte time: 10ms [min: 2ms, max: 19ms, s.d.: 6ms] │
└────────────────────────────────────────────────────────────────┘

  #  failure         detail                                                
                                                                           
 1.  AssertionError  getUpdatedCarPark                                     
                     expected response to have status code 200 but got 405 
                     at assertion:0 in test-script                         
                     inside "Update car park"                              
                                                                           
 2.  AssertionError  getUpdatedCarPark                                     
                     expected 'Park1' to deeply equal 'Park2'              
                     at assertion:0 in test-script                         
                     inside "Get carp park by id"                          

-----------------------

updateCarParkFloor

→ Create new car park
  [16. 6. 2022, 14:16:55]  POST http://localhost:8080/carparks  
  201 Created ★ 42ms time ★ 440B↑ 146B↓ size ★ 10↑ 2↓ headers ★ 0 cookies
  ┌ ↑ raw ★ 97B
  │ {
  │    "id": 28319418,
  │   "name": "Park1",
  │   "address": "Address1",
  │   "prices": 10,
  │   "floors": []
  │ }
  └ 
  ┌ ↓ application/json ★ text ★ json ★ utf8 ★ 70B
  │ {"id":119,"name":"Park1","address":"Address1","prices"
  │ :10,"floors":[]}
  └
  prepare   wait   dns-lookup   tcp-handshake   transfer-start   download   process   total 
  37ms      9ms    2ms          1ms             20ms             8ms        505µs     79ms  

  [14:16:55]  √  createAndSetCarParkId

→ Create new car park floor for given car park
  [16. 6. 2022, 14:16:56]  POST http://localhost:8080/carparks/119/floors  
  201 Created ★ 19ms time ★ 433B↑ 133B↓ size ★ 10↑ 2↓ headers ★ 0 cookies
  ┌ ↑ raw ★ 79B
  │ {
  │   "id": -1331359,
  │   "identifier": "Floor1",
  │   "carPark": 119,
  │   "spots": []
  │ }
  └ 
  ┌ ↓ application/json ★ text ★ json ★ utf8 ★ 57B
  │ {"id":120,"identifier":"Floor1","carPark":119,"spots":
  │ []}
  └
  prepare   wait    dns-lookup   tcp-handshake   transfer-start   download   process   total 
  1ms       732µs   (cache)      (cache)         15ms             2ms        85µs      20ms  

  [14:16:56]  √  createCarParkFloor

→ Update car park floor
  [16. 6. 2022, 14:16:56]  PUT http://localhost:8080/carparks/119/floors/Floor1  
  405 Method Not Allowed ★ 6ms time ★ 426B↑ 77B↓ size ★ 10↑ 2↓ headers ★ 0 cookies
  ┌ ↑ raw ★ 79B
  │ {
  │   "id": 120,
  │   "identifier": "Floor2",
  │   "carPark": 119,
  │   "spots": []
  │ }
  └ 
  ↓ text/plain ★ text ★ plain ★ utf8

  prepare   wait    dns-lookup   tcp-handshake   transfer-start   download   process   total 
  1ms       398µs   (cache)      (cache)         2ms              1ms        76µs      6ms   

  [14:16:56] 1. updateCarParkFloor

→ Get car park floor that belongs to car park with given id and has given identifier Copy 2
  [16. 6. 2022, 14:16:56]  GET http://localhost:8080/carparkFloors/120  
  404 Not Found ★ 5ms time ★ 299B↑ 45B↓ size ★ 8↑ 1↓ headers ★ 0 cookies
  ↓ text/plain ★ text ★ plain ★ utf8

  prepare   wait    dns-lookup   tcp-handshake   transfer-start   download   process   total 
  1ms       295µs   (cache)      (cache)         2ms              1ms        50µs      5ms   

  [14:16:56] 2. getUpdatedCarParkFloor

┌─────────────────────────┬───────────────────┬──────────────────┐
│                         │          executed │           failed │
├─────────────────────────┼───────────────────┼──────────────────┤
│              iterations │                 1 │                0 │
├─────────────────────────┼───────────────────┼──────────────────┤
│                requests │                 4 │                0 │
├─────────────────────────┼───────────────────┼──────────────────┤
│            test-scripts │                 8 │                0 │
├─────────────────────────┼───────────────────┼──────────────────┤
│      prerequest-scripts │                 4 │                0 │
├─────────────────────────┼───────────────────┼──────────────────┤
│              assertions │                 4 │                2 │
├─────────────────────────┴───────────────────┴──────────────────┤
│ total run duration: 564ms                                      │
├────────────────────────────────────────────────────────────────┤
│ total data received: 127B (approx)                             │
├────────────────────────────────────────────────────────────────┤
│ average response time: 18ms [min: 5ms, max: 42ms, s.d.: 14ms]  │
├────────────────────────────────────────────────────────────────┤
│ average DNS lookup time: 2ms [min: 2ms, max: 2ms, s.d.: 0µs]   │
├────────────────────────────────────────────────────────────────┤
│ average first byte time: 10ms [min: 2ms, max: 20ms, s.d.: 7ms] │
└────────────────────────────────────────────────────────────────┘

  #  failure         detail                                                                                             
                                                                                                                        
 1.  AssertionError  updateCarParkFloor                                                                                 
                     expected response to have status code 200 but got 405                                              
                     at assertion:0 in test-script                                                                      
                     inside "Update car park floor"                                                                     
                                                                                                                        
 2.  AssertionError  getUpdatedCarParkFloor                                                                             
                     expected response to have status code 200 but got 404                                              
                     at assertion:0 in test-script                                                                      
                     inside "Get car park floor that belongs to car park with given id and has given identifier Copy 2" 

-----------------------

updateCarWithoutType

→ Create user
  [16. 6. 2022, 14:16:58]  POST http://localhost:8080/users  
  201 Created ★ 49ms time ★ 463B↑ 171B↓ size ★ 10↑ 2↓ headers ★ 0 cookies
  ┌ ↑ raw ★ 122B
  │ {
  │   "id": -92119638,
  │   "firstName": "Jozko",
  │   "lastName": "Mkrvicka",
  │   "email": "jozo.mrkvicka@stuba.sk",
  │   "cars": []
  │ }
  └ 
  ┌ ↓ application/json ★ text ★ json ★ utf8 ★ 95B
  │ {"id":121,"firstName":"Jozko","lastName":"Mkrvicka","e
  │ mail":"jozo.mrkvicka@stuba.sk","cars":[]}
  └
  prepare   wait   dns-lookup   tcp-handshake   transfer-start   download   process   total 
  35ms      9ms    2ms          1ms             22ms             12ms       791µs     85ms  

  [14:16:58]  √  createUser

→ Create car
  [16. 6. 2022, 14:16:58]  POST http://localhost:8080/cars  
  400 Bad Request ★ 19ms time ★ 605B↑ 100B↓ size ★ 10↑ 3↓ headers ★ 0 cookies
  ┌ ↑ raw ★ 265B
  │ {
  │   "id": -47280362,
  │   "brand": "Skoda",
  │   "model": "Fabia",
  │   "vrp": "BA111AA",
  │   "owner": {
  │     "id": 121,
  │     "firstName": "Jozko",
  │     "lastName": "Mkrvicka",
  │     "email": "jozo.mrkvicka@stuba.sk",
  │     "cars": []
  │   },
  │   "colour": "Green",
  │   "reservations": []
  │ }
  └ 
  ┌ ↓ application/json ★ text ★ json ★ utf8 ★ 2B
  │ {}
  └
  prepare   wait    dns-lookup   tcp-handshake   transfer-start   download   process   total 
  1ms       879µs   (cache)      (cache)         14ms             2ms        109µs     20ms  

  [14:16:58] 1. createCar

→ Update car
  [16. 6. 2022, 14:16:58]  PUT http://localhost:8080/cars/{{carId}}  
  405 Method Not Allowed ★ 8ms time ★ 620B↑ 81B↓ size ★ 10↑ 2↓ headers ★ 0 cookies
  ┌ ↑ raw ★ 263B
  │ {
  │   "id": {{carId}},
  │   "brand": "Ford",
  │   "model": "Fiesta",
  │   "vrp": "BA222AA",
  │   "owner": {
  │     "id": 121,
  │     "firstName": "Jozko",
  │     "lastName": "Mkrvicka",
  │     "email": "jozo.mrkvicka@stuba.sk",
  │     "cars": []
  │   },
  │   "colour": "Red",
  │   "reservations": []
  │ }
  └ 
  ↓ text/plain ★ text ★ plain ★ utf8

  prepare   wait   dns-lookup   tcp-handshake   transfer-start   download   process   total 
  1ms       1ms    583µs        1ms             3ms              1ms        73µs      9ms   

  [14:16:58] 2. updateCar

→ Get car with id
  [16. 6. 2022, 14:16:58]  GET http://localhost:8080/cars/{{carId}}  
  404 Not Found ★ 8ms time ★ 304B↑ 45B↓ size ★ 8↑ 1↓ headers ★ 0 cookies
  ↓ text/plain ★ text ★ plain ★ utf8

  prepare   wait    dns-lookup   tcp-handshake   transfer-start   download   process   total 
  1ms       294µs   (cache)      (cache)         5ms              1ms        66µs      8ms   

  [14:16:58] 3. getCar

┌─────────────────────────┬───────────────────┬──────────────────┐
│                         │          executed │           failed │
├─────────────────────────┼───────────────────┼──────────────────┤
│              iterations │                 1 │                0 │
├─────────────────────────┼───────────────────┼──────────────────┤
│                requests │                 4 │                0 │
├─────────────────────────┼───────────────────┼──────────────────┤
│            test-scripts │                 8 │                0 │
├─────────────────────────┼───────────────────┼──────────────────┤
│      prerequest-scripts │                 4 │                0 │
├─────────────────────────┼───────────────────┼──────────────────┤
│              assertions │                 4 │                3 │
├─────────────────────────┴───────────────────┴──────────────────┤
│ total run duration: 594ms                                      │
├────────────────────────────────────────────────────────────────┤
│ total data received: 97B (approx)                              │
├────────────────────────────────────────────────────────────────┤
│ average response time: 21ms [min: 8ms, max: 49ms, s.d.: 16ms]  │
├────────────────────────────────────────────────────────────────┤
│ average DNS lookup time: 2ms [min: 583µs, max: 2ms, s.d.: 1ms] │
├────────────────────────────────────────────────────────────────┤
│ average first byte time: 11ms [min: 3ms, max: 22ms, s.d.: 7ms] │
└────────────────────────────────────────────────────────────────┘

  #  failure         detail                                                
                                                                           
 1.  AssertionError  createCar                                             
                     expected response to have status code 201 but got 400 
                     at assertion:0 in test-script                         
                     inside "Create car"                                   
                                                                           
 2.  AssertionError  updateCar                                             
                     expected response to have status code 200 but got 405 
                     at assertion:0 in test-script                         
                     inside "Update car"                                   
                                                                           
 3.  AssertionError  getCar                                                
                     expected response to have status code 200 but got 404 
                     at assertion:0 in test-script                         
                     inside "Get car with id"                              

-----------------------

updateCarWithType

→ Create user
  [16. 6. 2022, 14:17:00]  POST http://localhost:8080/users  
  201 Created ★ 46ms time ★ 463B↑ 171B↓ size ★ 10↑ 2↓ headers ★ 0 cookies
  ┌ ↑ raw ★ 122B
  │ {
  │   "id": -92119638,
  │   "firstName": "Jozko",
  │   "lastName": "Mkrvicka",
  │   "email": "jozo.mrkvicka@stuba.sk",
  │   "cars": []
  │ }
  └ 
  ┌ ↓ application/json ★ text ★ json ★ utf8 ★ 95B
  │ {"id":122,"firstName":"Jozko","lastName":"Mkrvicka","e
  │ mail":"jozo.mrkvicka@stuba.sk","cars":[]}
  └
  prepare   wait   dns-lookup   tcp-handshake   transfer-start   download   process   total 
  32ms      9ms    7ms          1ms             19ms             8ms        503µs     78ms  

  [14:17:00]  √  createUser

→ Create car type Copy 2
  [16. 6. 2022, 14:17:00]  POST http://localhost:8080/cartypes  
  201 Created ★ 18ms time ★ 384B↑ 104B↓ size ★ 10↑ 2↓ headers ★ 0 cookies
  ┌ ↑ raw ★ 41B
  │ {
  │   "id": 2015878,
  │   "name": "Electric"
  │ }
  └ 
  ┌ ↓ application/json ★ text ★ json ★ utf8 ★ 28B
  │ {"id":123,"name":"Electric"}
  └
  prepare   wait    dns-lookup   tcp-handshake   transfer-start   download   process   total 
  1ms       822µs   (cache)      (cache)         15ms             1ms        90µs      19ms  

  [14:17:00]  √  createCarType

→ Create car
  [16. 6. 2022, 14:17:00]  POST http://localhost:8080/cars  
  201 Created ★ 20ms time ★ 666B↑ 218B↓ size ★ 10↑ 2↓ headers ★ 0 cookies
  ┌ ↑ raw ★ 326B
  │ {
  │   "id": -47280362,
  │   "brand": "Skoda",
  │   "model": "Fabia",
  │   "vrp": "BA111AA",
  │   "owner": {
  │     "id": 122,
  │     "firstName": "Jozko",
  │     "lastName": "Mkrvicka",
  │     "email": "jozo.mrkvicka@stuba.sk",
  │     "cars": []
  │   },
  │   "colour": "Green",
  │   "reservations": [],
  │   "type": {
  │       "id": 123,
  │       "name": "Electric"
  │     }
  │ }
  └ 
  ┌ ↓ application/json ★ text ★ json ★ utf8 ★ 141B
  │ {"id":124,"brand":"Skoda","model":"Fabia","vrp":"BA111
  │ AA","colour":"Green","type":{"id":123,"name":"Electric
  │ "},"owner":122,"reservations":[]}
  └
  prepare   wait    dns-lookup   tcp-handshake   transfer-start   download   process   total 
  1ms       282µs   (cache)      (cache)         17ms             1ms        55µs      21ms  

  [14:17:00]  √  createCar

→ Update car
  [16. 6. 2022, 14:17:00]  PUT http://localhost:8080/cars/124  
  405 Method Not Allowed ★ 5ms time ★ 600B↑ 81B↓ size ★ 10↑ 2↓ headers ★ 0 cookies
  ┌ ↑ raw ★ 257B
  │ {
  │   "id": 124,
  │   "brand": "Ford",
  │   "model": "Fiesta",
  │   "vrp": "BA222AA",
  │   "owner": {
  │     "id": 122,
  │     "firstName": "Jozko",
  │     "lastName": "Mkrvicka",
  │     "email": "jozo.mrkvicka@stuba.sk",
  │     "cars": []
  │   },
  │   "colour": "Red",
  │   "reservations": []
  │ }
  └ 
  ↓ text/plain ★ text ★ plain ★ utf8

  prepare   wait    dns-lookup   tcp-handshake   transfer-start   download   process   total 
  1ms       280µs   (cache)      (cache)         2ms              1ms        75µs      6ms   

  [14:17:00] 1. updateCar

→ Get car with id
  [16. 6. 2022, 14:17:00]  GET http://localhost:8080/cars/124  
  200 OK ★ 12ms time ★ 290B↑ 213B↓ size ★ 8↑ 2↓ headers ★ 0 cookies
  ┌ ↓ application/json ★ text ★ json ★ utf8 ★ 141B
  │ {"id":124,"brand":"Skoda","model":"Fabia","vrp":"BA111
  │ AA","colour":"Green","type":{"id":123,"name":"Electric
  │ "},"owner":122,"reservations":[]}
  └
  prepare   wait    dns-lookup   tcp-handshake   transfer-start   download   process   total 
  1ms       436µs   (cache)      (cache)         9ms              1ms        65µs      13ms  

  [14:17:00] 2. getCar

┌─────────────────────────┬───────────────────┬──────────────────┐
│                         │          executed │           failed │
├─────────────────────────┼───────────────────┼──────────────────┤
│              iterations │                 1 │                0 │
├─────────────────────────┼───────────────────┼──────────────────┤
│                requests │                 5 │                0 │
├─────────────────────────┼───────────────────┼──────────────────┤
│            test-scripts │                10 │                0 │
├─────────────────────────┼───────────────────┼──────────────────┤
│      prerequest-scripts │                 5 │                0 │
├─────────────────────────┼───────────────────┼──────────────────┤
│              assertions │                 5 │                2 │
├─────────────────────────┴───────────────────┴──────────────────┤
│ total run duration: 727ms                                      │
├────────────────────────────────────────────────────────────────┤
│ total data received: 405B (approx)                             │
├────────────────────────────────────────────────────────────────┤
│ average response time: 20ms [min: 5ms, max: 46ms, s.d.: 13ms]  │
├────────────────────────────────────────────────────────────────┤
│ average DNS lookup time: 7ms [min: 7ms, max: 7ms, s.d.: 0µs]   │
├────────────────────────────────────────────────────────────────┤
│ average first byte time: 12ms [min: 2ms, max: 19ms, s.d.: 6ms] │
└────────────────────────────────────────────────────────────────┘

  #  failure         detail                                                
                                                                           
 1.  AssertionError  updateCar                                             
                     expected response to have status code 200 but got 405 
                     at assertion:0 in test-script                         
                     inside "Update car"                                   
                                                                           
 2.  AssertionError  getCar                                                
                     expected 'Skoda' to deeply equal 'Ford'               
                     at assertion:0 in test-script                         
                     inside "Get car with id"                              

-----------------------

updateParkingSpotWithoutType

→ Create new car park
  [16. 6. 2022, 14:17:02]  POST http://localhost:8080/carparks  
  201 Created ★ 52ms time ★ 439B↑ 146B↓ size ★ 10↑ 2↓ headers ★ 0 cookies
  ┌ ↑ raw ★ 96B
  │ {
  │   "id": 28319418,
  │   "name": "Park1",
  │   "address": "Address1",
  │   "prices": 10,
  │   "floors": []
  │ }
  └ 
  ┌ ↓ application/json ★ text ★ json ★ utf8 ★ 70B
  │ {"id":125,"name":"Park1","address":"Address1","prices"
  │ :10,"floors":[]}
  └
  prepare   wait   dns-lookup   tcp-handshake   transfer-start   download   process   total 
  35ms      10ms   2ms          1ms             28ms             8ms        514µs     87ms  

  [14:17:02]  √  createAndSetCarParkId

→ Create new car park floor for given car park
  [16. 6. 2022, 14:17:03]  POST http://localhost:8080/carparks/125/floors  
  201 Created ★ 20ms time ★ 433B↑ 133B↓ size ★ 10↑ 2↓ headers ★ 0 cookies
  ┌ ↑ raw ★ 79B
  │ {
  │   "id": -1331359,
  │   "identifier": "Floor1",
  │   "carPark": 125,
  │   "spots": []
  │ }
  └ 
  ┌ ↓ application/json ★ text ★ json ★ utf8 ★ 57B
  │ {"id":126,"identifier":"Floor1","carPark":125,"spots":
  │ []}
  └
  prepare   wait    dns-lookup   tcp-handshake   transfer-start   download   process   total 
  2ms       889µs   (cache)      (cache)         16ms             2ms        93µs      22ms  


→ Create new car park floor for given car park
  [16. 6. 2022, 14:17:03]  POST http://localhost:8080/carparks/125/floors  
  400 Bad Request ★ 13ms time ★ 415B↑ 100B↓ size ★ 10↑ 3↓ headers ★ 0 cookies
  ┌ ↑ raw ★ 61B
  │ {
  │   "identifier": "Floor1",
  │   "carPark": 125,
  │   "spots": []
  │ }
  └ 
  ┌ ↓ application/json ★ text ★ json ★ utf8 ★ 2B
  │ {}
  └
  prepare   wait    dns-lookup   tcp-handshake   transfer-start   download   process   total 
  1ms       290µs   (cache)      (cache)         8ms              3ms        93µs      13ms  


→ Create parking spot for given car park and given car park floor
  [16. 6. 2022, 14:17:03]  POST http://localhost:8080/carparks/125/floors/Floor1/spots  
  400 Bad Request ★ 16ms time ★ 497B↑ 100B↓ size ★ 10↑ 3↓ headers ★ 0 cookies
  ┌ ↑ raw ★ 129B
  │ {
  │   "id": -64207243,
  │   "identifier": "1.01",
  │   "carParkFloor": "Floor1",
  │   "carPark": 125,
  │   "free": true,
  │   "reservations": []
  │ }
  └ 
  ┌ ↓ application/json ★ text ★ json ★ utf8 ★ 2B
  │ {}
  └
  prepare   wait   dns-lookup   tcp-handshake   transfer-start   download   process   total 
  2ms       1ms    746µs        1ms             9ms              2ms        77µs      18ms  

  [14:17:03] 1. createParkingSpotWithoutType

→ Update parking spot
  [16. 6. 2022, 14:17:03]  PUT http://localhost:8080/parkingspots/{{parkingSpotId}}  
  405 Method Not Allowed ★ 11ms time ★ 510B↑ 81B↓ size ★ 10↑ 2↓ headers ★ 0 cookies
  ┌ ↑ raw ★ 137B
  │ {
  │   "id": {{parkingSpotId}},
  │   "identifier": "1.02",
  │   "carParkFloor": "Floor1",
  │   "carPark": 125,
  │   "free": true,
  │   "reservations": []
  │ }
  └ 
  ↓ text/plain ★ text ★ plain ★ utf8

  prepare   wait   dns-lookup   tcp-handshake   transfer-start   download   process   total 
  1ms       1ms    2ms          1ms             3ms              2ms        103µs     11ms  

  [14:17:03] 2. updateParkingSpotWithoutType

→ Get parking spot by id
  [16. 6. 2022, 14:17:03]  GET http://localhost:8080/parkingspots/{{parkingSpotId}}  
  404 Not Found ★ 7ms time ★ 320B↑ 45B↓ size ★ 8↑ 1↓ headers ★ 0 cookies
  ↓ text/plain ★ text ★ plain ★ utf8

  prepare   wait    dns-lookup   tcp-handshake   transfer-start   download   process   total 
  2ms       429µs   (cache)      (cache)         5ms              1ms        52µs      9ms   

  [14:17:03] 3. getUpdatedParkingSpotWithoutType

┌─────────────────────────┬────────────────────┬───────────────────┐
│                         │           executed │            failed │
├─────────────────────────┼────────────────────┼───────────────────┤
│              iterations │                  1 │                 0 │
├─────────────────────────┼────────────────────┼───────────────────┤
│                requests │                  6 │                 0 │
├─────────────────────────┼────────────────────┼───────────────────┤
│            test-scripts │                 12 │                 0 │
├─────────────────────────┼────────────────────┼───────────────────┤
│      prerequest-scripts │                  6 │                 0 │
├─────────────────────────┼────────────────────┼───────────────────┤
│              assertions │                  4 │                 3 │
├─────────────────────────┴────────────────────┴───────────────────┤
│ total run duration: 847ms                                        │
├──────────────────────────────────────────────────────────────────┤
│ total data received: 131B (approx)                               │
├──────────────────────────────────────────────────────────────────┤
│ average response time: 19ms [min: 7ms, max: 52ms, s.d.: 14ms]    │
├──────────────────────────────────────────────────────────────────┤
│ average DNS lookup time: 2ms [min: 746µs, max: 2ms, s.d.: 876µs] │
├──────────────────────────────────────────────────────────────────┤
│ average first byte time: 11ms [min: 3ms, max: 28ms, s.d.: 8ms]   │
└──────────────────────────────────────────────────────────────────┘

  #  failure         detail                                                                   
                                                                                              
 1.  AssertionError  createParkingSpotWithoutType                                             
                     expected response to have status code 201 but got 400                    
                     at assertion:0 in test-script                                            
                     inside "Create parking spot for given car park and given car park floor" 
                                                                                              
 2.  AssertionError  updateParkingSpotWithoutType                                             
                     expected response to have status code 200 but got 405                    
                     at assertion:0 in test-script                                            
                     inside "Update parking spot"                                             
                                                                                              
 3.  AssertionError  getUpdatedParkingSpotWithoutType                                         
                     expected response to have status code 200 but got 404                    
                     at assertion:0 in test-script                                            
                     inside "Get parking spot by id"                                          

-----------------------

updateParkingSpotWithType

→ Create new car park
  [16. 6. 2022, 14:17:05]  POST http://localhost:8080/carparks  
  201 Created ★ 47ms time ★ 439B↑ 146B↓ size ★ 10↑ 2↓ headers ★ 0 cookies
  ┌ ↑ raw ★ 96B
  │ {
  │   "id": 28319418,
  │   "name": "Park1",
  │   "address": "Address1",
  │   "prices": 10,
  │   "floors": []
  │ }
  └ 
  ┌ ↓ application/json ★ text ★ json ★ utf8 ★ 70B
  │ {"id":127,"name":"Park1","address":"Address1","prices"
  │ :10,"floors":[]}
  └
  prepare   wait   dns-lookup   tcp-handshake   transfer-start   download   process   total 
  35ms      11ms   3ms          1ms             21ms             8ms        509µs     82ms  

  [14:17:05]  √  createAndSetCarParkId

→ Create new car park floor for given car park
  [16. 6. 2022, 14:17:05]  POST http://localhost:8080/carparks/127/floors  
  201 Created ★ 21ms time ★ 433B↑ 133B↓ size ★ 10↑ 2↓ headers ★ 0 cookies
  ┌ ↑ raw ★ 79B
  │ {
  │   "id": -1331359,
  │   "identifier": "Floor1",
  │   "carPark": 127,
  │   "spots": []
  │ }
  └ 
  ┌ ↓ application/json ★ text ★ json ★ utf8 ★ 57B
  │ {"id":128,"identifier":"Floor1","carPark":127,"spots":
  │ []}
  └
  prepare   wait    dns-lookup   tcp-handshake   transfer-start   download   process   total 
  1ms       787µs   (cache)      (cache)         16ms             3ms        98µs      22ms  


→ Create new car park floor for given car park
  [16. 6. 2022, 14:17:05]  POST http://localhost:8080/carparks/127/floors  
  400 Bad Request ★ 13ms time ★ 415B↑ 100B↓ size ★ 10↑ 3↓ headers ★ 0 cookies
  ┌ ↑ raw ★ 61B
  │ {
  │   "identifier": "Floor1",
  │   "carPark": 127,
  │   "spots": []
  │ }
  └ 
  ┌ ↓ application/json ★ text ★ json ★ utf8 ★ 2B
  │ {}
  └
  prepare   wait    dns-lookup   tcp-handshake   transfer-start   download   process   total 
  1ms       293µs   (cache)      (cache)         9ms              2ms        72µs      13ms  


→ Create car type Copy
  [16. 6. 2022, 14:17:05]  POST http://localhost:8080/cartypes  
  201 Created ★ 26ms time ★ 384B↑ 104B↓ size ★ 10↑ 2↓ headers ★ 0 cookies
  ┌ ↑ raw ★ 41B
  │ {
  │   "id": 2015878,
  │   "name": "Electric"
  │ }
  └ 
  ┌ ↓ application/json ★ text ★ json ★ utf8 ★ 28B
  │ {"id":129,"name":"Electric"}
  └
  prepare   wait   dns-lookup   tcp-handshake   transfer-start   download   process   total 
  2ms       1ms    788µs        1ms             18ms             3ms        107µs     27ms  

  [14:17:05]  √  createCarType

→ Create parking spot for given car park and given car park floor
  [16. 6. 2022, 14:17:05]  POST http://localhost:8080/carparks/127/floors/Floor1/spots  
  400 Bad Request ★ 12ms time ★ 557B↑ 100B↓ size ★ 10↑ 3↓ headers ★ 0 cookies
  ┌ ↑ raw ★ 189B
  │ {
  │   "id": -64207243,
  │   "identifier": "1.01",
  │   "carParkFloor": "Floor1",
  │   "carPark": 127,
  │   "free": true,
  │   "reservations": [],
  │    "type": {
  │       "id": 129,
  │       "name": "Electric"
  │   }
  │ }
  └ 
  ┌ ↓ application/json ★ text ★ json ★ utf8 ★ 2B
  │ {}
  └
  prepare   wait    dns-lookup   tcp-handshake   transfer-start   download   process   total 
  1ms       408µs   (cache)      (cache)         9ms              1ms        58µs      13ms  

  [14:17:06] 1. createParkingSpotWithoutType

→ Update parking spot
  [16. 6. 2022, 14:17:06]  PUT http://localhost:8080/parkingspots/{{parkingSpotId}}  
  405 Method Not Allowed ★ 8ms time ★ 570B↑ 81B↓ size ★ 10↑ 2↓ headers ★ 0 cookies
  ┌ ↑ raw ★ 197B
  │ {
  │   "id": {{parkingSpotId}},
  │   "identifier": "1.02",
  │   "carParkFloor": "Floor1",
  │   "carPark": 127,
  │   "free": true,
  │   "reservations": [],
  │    "type": {
  │       "id": 129,
  │       "name": "Electric"
  │   }
  │ }
  └ 
  ↓ text/plain ★ text ★ plain ★ utf8

  prepare   wait   dns-lookup   tcp-handshake   transfer-start   download   process   total 
  1ms       1ms    547µs        948µs           2ms              1ms        70µs      9ms   

  [14:17:06] 2. updateParkingSpotWithoutType

→ Get parking spot by id
  [16. 6. 2022, 14:17:06]  GET http://localhost:8080/parkingspots/{{parkingSpotId}}  
  404 Not Found ★ 7ms time ★ 320B↑ 45B↓ size ★ 8↑ 1↓ headers ★ 0 cookies
  ↓ text/plain ★ text ★ plain ★ utf8

  prepare   wait    dns-lookup   tcp-handshake   transfer-start   download   process   total 
  1ms       305µs   (cache)      (cache)         4ms              1ms        49µs      8ms   

  [14:17:06] 3. getUpdatedParkingSpotWithoutType

┌─────────────────────────┬───────────────────┬──────────────────┐
│                         │          executed │           failed │
├─────────────────────────┼───────────────────┼──────────────────┤
│              iterations │                 1 │                0 │
├─────────────────────────┼───────────────────┼──────────────────┤
│                requests │                 7 │                0 │
├─────────────────────────┼───────────────────┼──────────────────┤
│            test-scripts │                14 │                0 │
├─────────────────────────┼───────────────────┼──────────────────┤
│      prerequest-scripts │                 7 │                0 │
├─────────────────────────┼───────────────────┼──────────────────┤
│              assertions │                 5 │                3 │
├─────────────────────────┴───────────────────┴──────────────────┤
│ total run duration: 968ms                                      │
├────────────────────────────────────────────────────────────────┤
│ total data received: 159B (approx)                             │
├────────────────────────────────────────────────────────────────┤
│ average response time: 19ms [min: 7ms, max: 47ms, s.d.: 13ms]  │
├────────────────────────────────────────────────────────────────┤
│ average DNS lookup time: 2ms [min: 547µs, max: 3ms, s.d.: 1ms] │
├────────────────────────────────────────────────────────────────┤
│ average first byte time: 11ms [min: 2ms, max: 21ms, s.d.: 6ms] │
└────────────────────────────────────────────────────────────────┘

  #  failure         detail                                                                   
                                                                                              
 1.  AssertionError  createParkingSpotWithoutType                                             
                     expected response to have status code 201 but got 400                    
                     at assertion:0 in test-script                                            
                     inside "Create parking spot for given car park and given car park floor" 
                                                                                              
 2.  AssertionError  updateParkingSpotWithoutType                                             
                     expected response to have status code 200 but got 405                    
                     at assertion:0 in test-script                                            
                     inside "Update parking spot"                                             
                                                                                              
 3.  AssertionError  getUpdatedParkingSpotWithoutType                                         
                     expected response to have status code 200 but got 404                    
                     at assertion:0 in test-script                                            
                     inside "Get parking spot by id"                                          

-----------------------

updateReservationWithoutType

→ Create new car park Copy
  [16. 6. 2022, 14:17:08]  POST http://localhost:8080/carparks  
  401 Unauthorized ★ 30ms time ★ 455B↑ 82B↓ size ★ 10↑ 2↓ headers ★ 0 cookies
  ┌ ↑ raw ★ 96B
  │ {
  │   "id": 28319418,
  │   "name": "Park1",
  │   "address": "Address1",
  │   "prices": 10,
  │   "floors": []
  │ }
  └ 
  ┌ ↓ application/json ★ text ★ json ★ utf8 ★ 2B
  │ {}
  └
  prepare   wait   dns-lookup   tcp-handshake   transfer-start   download   process   total 
  35ms      9ms    2ms          1ms             7ms              8ms        496µs     65ms  

  [14:17:08] 1. createAndSetCarParkId

→ Create new car park floor for given car park Copy
  [16. 6. 2022, 14:17:08]  POST http://localhost:8080/carparks//floors  
  404 Not Found ★ 6ms time ★ 443B↑ 45B↓ size ★ 10↑ 1↓ headers ★ 0 cookies
  ┌ ↑ raw ★ 76B
  │ {
  │   "id": -1331359,
  │   "identifier": "Floor1",
  │   "carPark": ,
  │   "spots": []
  │ }
  └ 
  ↓ text/plain ★ text ★ plain ★ utf8

  prepare   wait    dns-lookup   tcp-handshake   transfer-start   download   process   total 
  1ms       802µs   (cache)      (cache)         2ms              2ms        95µs      7ms   


→ Create new car park floor for given car park Copy
  [16. 6. 2022, 14:17:08]  POST http://localhost:8080/carparks//floors  
  404 Not Found ★ 5ms time ★ 425B↑ 45B↓ size ★ 10↑ 1↓ headers ★ 0 cookies
  ┌ ↑ raw ★ 58B
  │ {
  │   "identifier": "Floor1",
  │   "carPark": ,
  │   "spots": []
  │ }
  └ 
  ↓ text/plain ★ text ★ plain ★ utf8

  prepare   wait    dns-lookup   tcp-handshake   transfer-start   download   process   total 
  1ms       403µs   (cache)      (cache)         2ms              1ms        45µs      5ms   


→ Create parking spot for given car park and given car park floor Copy
  [16. 6. 2022, 14:17:08]  POST http://localhost:8080/carparks//floors/Floor1/spots  
  404 Not Found ★ 5ms time ★ 507B↑ 45B↓ size ★ 10↑ 1↓ headers ★ 0 cookies
  ┌ ↑ raw ★ 126B
  │ {
  │   "id": -64207243,
  │   "identifier": "1.01",
  │   "carParkFloor": "Floor1",
  │   "carPark": ,
  │   "free": true,
  │   "reservations": []
  │ }
  └ 
  ↓ text/plain ★ text ★ plain ★ utf8

  prepare   wait    dns-lookup   tcp-handshake   transfer-start   download   process   total 
  1ms       396µs   (cache)      (cache)         2ms              1ms        48µs      6ms   

  [14:17:08] 2. createParkingSpotWithoutType

→ Create user Copy
  [16. 6. 2022, 14:17:08]  POST http://localhost:8080/users  
  401 Unauthorized ★ 8ms time ★ 479B↑ 82B↓ size ★ 10↑ 2↓ headers ★ 0 cookies
  ┌ ↑ raw ★ 122B
  │ {
  │   "id": -92119638,
  │   "firstName": "Jozko",
  │   "lastName": "Mkrvicka",
  │   "email": "jozo.mrkvicka@stuba.sk",
  │   "cars": []
  │ }
  └ 
  ┌ ↓ application/json ★ text ★ json ★ utf8 ★ 2B
  │ {}
  └
  prepare   wait    dns-lookup   tcp-handshake   transfer-start   download   process   total 
  1ms       391µs   (cache)      (cache)         5ms              1ms        78µs      8ms   

  [14:17:08] 3. createUser

→ Create car Copy
  [16. 6. 2022, 14:17:08]  POST http://localhost:8080/cars  
  401 Unauthorized ★ 7ms time ★ 628B↑ 82B↓ size ★ 10↑ 2↓ headers ★ 0 cookies
  ┌ ↑ raw ★ 272B
  │ {
  │   "id": -47280362,
  │   "brand": "Skoda",
  │   "model": "Fabia",
  │   "vrp": "BA111AA",
  │   "owner": {
  │     "id": {{userId}},
  │     "firstName": "Jozko",
  │     "lastName": "Mkrvicka",
  │     "email": "jozo.mrkvicka@stuba.sk",
  │     "cars": []
  │   },
  │   "colour": "Green",
  │   "reservations": []
  │ }
  └ 
  ┌ ↓ application/json ★ text ★ json ★ utf8 ★ 2B
  │ {}
  └
  prepare   wait    dns-lookup   tcp-handshake   transfer-start   download   process   total 
  1ms       269µs   (cache)      (cache)         5ms              1ms        53µs      8ms   

  [14:17:08] 4. createCar

→ Create new reservation Copy
  [16. 6. 2022, 14:17:08]  POST http://localhost:8080/reservations  
  401 Unauthorized ★ 7ms time ★ 992B↑ 82B↓ size ★ 10↑ 2↓ headers ★ 0 cookies
  ┌ ↑ raw ★ 628B
  │ {
  │   "id": -61316587,
  │   "start": "2022-06-08T10:00:00",
  │   "end": "2022-06-10T09:00:00",
  │   "prices": 15,
  │   "car": {
  │     "id": {{carId}},
  │     "brand": "Skoda",
  │     "model": "Fabia",
  │     "vrp": "BA111AA",
  │     "owner": {
  │       "id": {{userId}},
  │       "firstName": "Jozko",
  │       "lastName": "Mkrvicka",
  │       "email": "jozo.mrkvicka@stuba.sk",
  │       "cars": [
  │         {
  │           "id": {{carId}}
  │         }
  │       ]
  │     },
  │     "colour": "Green",
  │     "reservations": []
  │   },
  │   "spot": {
  │     "id": {{parkingSpotId}},
  │     "identifier": "1.01",
  │     "carParkFloor": "Floor1",
  │     "carPark": ,
  │     "free": false,
  │     "reservations": []
  │   }
  │ }
  └ 
  ┌ ↓ application/json ★ text ★ json ★ utf8 ★ 2B
  │ {}
  └
  prepare   wait    dns-lookup   tcp-handshake   transfer-start   download   process   total 
  1ms       273µs   (cache)      (cache)         4ms              1ms        48µs      8ms   

  [14:17:08] 5. createReservation

→ Update reservation
  [16. 6. 2022, 14:17:08]  PUT http://localhost:8080/reservations/{{reservationId}}  
  405 Method Not Allowed ★ 5ms time ★ 1.01kB↑ 74B↓ size ★ 10↑ 2↓ headers ★ 0 cookies
  ┌ ↑ raw ★ 622B
  │ {
  │   "id": {{reservationId}},
  │   "start": "2022-06-08T10:00:00",
  │   "end": null,
  │   "prices":null,
  │     "car": {
  │     "id": {{carId}},
  │     "brand": "Skoda",
  │     "model": "Fabia",
  │     "vrp": "BA111AA",
  │     "owner": {
  │       "id": {{userId}},
  │       "firstName": "Jozko",
  │       "lastName": "Mkrvicka",
  │       "email": "jozo.mrkvicka@stuba.sk",
  │       "cars": [
  │         {
  │           "id": {{carId}}
  │         }
  │       ]
  │     },
  │     "colour": "Green",
  │     "reservations": []
  │   },
  │   "spot": {
  │     "id": {{parkingSpotId}},
  │     "identifier": "1.01",
  │     "carParkFloor": "Floor1",
  │     "carPark": ,
  │     "free": false,
  │     "reservations": []
  │   }
  │ }
  └ 
  ↓ text/plain ★ text ★ plain ★ utf8

  prepare   wait    dns-lookup   tcp-handshake   transfer-start   download   process   total 
  1ms       391µs   (cache)      (cache)         2ms              1ms        46µs      6ms   

  [14:17:08] 6. getReservation

→ Get reservation by id Copy
  [16. 6. 2022, 14:17:08]  GET http://localhost:8080/reservations/{{reservationId}}  
  404 Not Found ★ 7ms time ★ 336B↑ 45B↓ size ★ 8↑ 1↓ headers ★ 0 cookies
  ↓ text/plain ★ text ★ plain ★ utf8

  prepare   wait    dns-lookup   tcp-handshake   transfer-start   download   process   total 
  1ms       388µs   (cache)      (cache)         4ms              1ms        41µs      8ms   

  [14:17:09] 7. getReservation

┌─────────────────────────┬──────────────────┬─────────────────┐
│                         │         executed │          failed │
├─────────────────────────┼──────────────────┼─────────────────┤
│              iterations │                1 │               0 │
├─────────────────────────┼──────────────────┼─────────────────┤
│                requests │                9 │               0 │
├─────────────────────────┼──────────────────┼─────────────────┤
│            test-scripts │               18 │               0 │
├─────────────────────────┼──────────────────┼─────────────────┤
│      prerequest-scripts │                9 │               0 │
├─────────────────────────┼──────────────────┼─────────────────┤
│              assertions │                7 │               7 │
├─────────────────────────┴──────────────────┴─────────────────┤
│ total run duration: 1066ms                                   │
├──────────────────────────────────────────────────────────────┤
│ total data received: 8B (approx)                             │
├──────────────────────────────────────────────────────────────┤
│ average response time: 8ms [min: 5ms, max: 30ms, s.d.: 7ms]  │
├──────────────────────────────────────────────────────────────┤
│ average DNS lookup time: 2ms [min: 2ms, max: 2ms, s.d.: 0µs] │
├──────────────────────────────────────────────────────────────┤
│ average first byte time: 4ms [min: 2ms, max: 7ms, s.d.: 1ms] │
└──────────────────────────────────────────────────────────────┘

  #  failure         detail                                                                        
                                                                                                   
 1.  AssertionError  createAndSetCarParkId                                                         
                     expected undefined to be a number                                             
                     at assertion:0 in test-script                                                 
                     inside "Create new car park Copy"                                             
                                                                                                   
 2.  AssertionError  createParkingSpotWithoutType                                                  
                     expected response to have status code 201 but got 404                         
                     at assertion:0 in test-script                                                 
                     inside "Create parking spot for given car park and given car park floor Copy" 
                                                                                                   
 3.  AssertionError  createUser                                                                    
                     expected response to have status code 201 but got 401                         
                     at assertion:0 in test-script                                                 
                     inside "Create user Copy"                                                     
                                                                                                   
 4.  AssertionError  createCar                                                                     
                     expected response to have status code 201 but got 401                         
                     at assertion:0 in test-script                                                 
                     inside "Create car Copy"                                                      
                                                                                                   
 5.  AssertionError  createReservation                                                             
                     expected response to have status code 201 but got 401                         
                     at assertion:0 in test-script                                                 
                     inside "Create new reservation Copy"                                          
                                                                                                   
 6.  AssertionError  getReservation                                                                
                     expected response to have status code 200 but got 405                         
                     at assertion:0 in test-script                                                 
                     inside "Update reservation"                                                   
                                                                                                   
 7.  AssertionError  getReservation                                                                
                     expected response to have status code 200 but got 404                         
                     at assertion:0 in test-script                                                 
                     inside "Get reservation by id Copy"                                           

-----------------------

updateReservationWithType

→ Create new car park Copy
  [16. 6. 2022, 14:17:10]  POST http://localhost:8080/carparks  
  401 Unauthorized ★ 36ms time ★ 455B↑ 82B↓ size ★ 10↑ 2↓ headers ★ 0 cookies
  ┌ ↑ raw ★ 96B
  │ {
  │   "id": 28319418,
  │   "name": "Park1",
  │   "address": "Address1",
  │   "prices": 10,
  │   "floors": []
  │ }
  └ 
  ┌ ↓ application/json ★ text ★ json ★ utf8 ★ 2B
  │ {}
  └
  prepare   wait   dns-lookup   tcp-handshake   transfer-start   download   process   total 
  37ms      10ms   3ms          1ms             9ms              9ms        642µs     73ms  

  [14:17:10] 1. createAndSetCarParkId

→ Create new car park floor for given car park Copy
  [16. 6. 2022, 14:17:11]  POST http://localhost:8080/carparks//floors  
  404 Not Found ★ 6ms time ★ 443B↑ 45B↓ size ★ 10↑ 1↓ headers ★ 0 cookies
  ┌ ↑ raw ★ 76B
  │ {
  │   "id": -1331359,
  │   "identifier": "Floor1",
  │   "carPark": ,
  │   "spots": []
  │ }
  └ 
  ↓ text/plain ★ text ★ plain ★ utf8

  prepare   wait    dns-lookup   tcp-handshake   transfer-start   download   process   total 
  2ms       792µs   (cache)      (cache)         2ms              2ms        93µs      8ms   


→ Create new car park floor for given car park Copy
  [16. 6. 2022, 14:17:11]  POST http://localhost:8080/carparks//floors  
  404 Not Found ★ 5ms time ★ 425B↑ 45B↓ size ★ 10↑ 1↓ headers ★ 0 cookies
  ┌ ↑ raw ★ 58B
  │ {
  │   "identifier": "Floor1",
  │   "carPark": ,
  │   "spots": []
  │ }
  └ 
  ↓ text/plain ★ text ★ plain ★ utf8

  prepare   wait    dns-lookup   tcp-handshake   transfer-start   download   process   total 
  1ms       424µs   (cache)      (cache)         2ms              1ms        43µs      6ms   


→ Create car type Copy
  [16. 6. 2022, 14:17:11]  POST http://localhost:8080/cartypes  
  401 Unauthorized ★ 7ms time ★ 400B↑ 82B↓ size ★ 10↑ 2↓ headers ★ 0 cookies
  ┌ ↑ raw ★ 41B
  │ {
  │   "id": 2015878,
  │   "name": "Electric"
  │ }
  └ 
  ┌ ↓ application/json ★ text ★ json ★ utf8 ★ 2B
  │ {}
  └
  prepare   wait    dns-lookup   tcp-handshake   transfer-start   download   process   total 
  1ms       296µs   (cache)      (cache)         4ms              1ms        67µs      8ms   

  [14:17:11] 2. createCarType

→ Create parking spot for given car park and given car park floor Copy
  [16. 6. 2022, 14:17:11]  POST http://localhost:8080/carparks//floors/Floor1/spots  
  404 Not Found ★ 5ms time ★ 576B↑ 45B↓ size ★ 10↑ 1↓ headers ★ 0 cookies
  ┌ ↑ raw ★ 195B
  │ {
  │   "id": -64207243,
  │   "identifier": "1.01",
  │   "carParkFloor": "Floor1",
  │   "carPark": ,
  │   "free": true,
  │   "reservations": [],
  │   "type": {
  │       "id": {{carTypeId}},
  │       "name": "Electric"
  │   }
  │ }
  └ 
  ↓ text/plain ★ text ★ plain ★ utf8

  prepare   wait    dns-lookup   tcp-handshake   transfer-start   download   process   total 
  1ms       380µs   (cache)      (cache)         2ms              1ms        53µs      5ms   

  [14:17:11] 3. createParkingSpotWithType

→ Create user Copy
  [16. 6. 2022, 14:17:11]  POST http://localhost:8080/users  
  401 Unauthorized ★ 8ms time ★ 479B↑ 82B↓ size ★ 10↑ 2↓ headers ★ 0 cookies
  ┌ ↑ raw ★ 122B
  │ {
  │   "id": -92119638,
  │   "firstName": "Jozko",
  │   "lastName": "Mkrvicka",
  │   "email": "jozo.mrkvicka@stuba.sk",
  │   "cars": []
  │ }
  └ 
  ┌ ↓ application/json ★ text ★ json ★ utf8 ★ 2B
  │ {}
  └
  prepare   wait    dns-lookup   tcp-handshake   transfer-start   download   process   total 
  1ms       288µs   (cache)      (cache)         5ms              2ms        55µs      9ms   

  [14:17:11] 4. createUser

→ Create car Copy
  [16. 6. 2022, 14:17:11]  POST http://localhost:8080/cars  
  401 Unauthorized ★ 8ms time ★ 697B↑ 82B↓ size ★ 10↑ 2↓ headers ★ 0 cookies
  ┌ ↑ raw ★ 341B
  │ {
  │   "id": -47280362,
  │   "brand": "Skoda",
  │   "model": "Fabia",
  │   "vrp": "BA111AA",
  │   "owner": {
  │     "id": {{userId}},
  │     "firstName": "Jozko",
  │     "lastName": "Mkrvicka",
  │     "email": "jozo.mrkvicka@stuba.sk",
  │     "cars": []
  │   },
  │   "colour": "Green",
  │   "reservations": [],
  │   "type": {
  │       "id": {{carTypeId}},
  │       "name": "Electric"
  │   }
  │ }
  └ 
  ┌ ↓ application/json ★ text ★ json ★ utf8 ★ 2B
  │ {}
  └
  prepare   wait    dns-lookup   tcp-handshake   transfer-start   download   process   total 
  1ms       302µs   (cache)      (cache)         5ms              1ms        54µs      8ms   

  [14:17:11] 5. createCar

→ Create new reservation Copy
  [16. 6. 2022, 14:17:11]  POST http://localhost:8080/reservations  
  401 Unauthorized ★ 8ms time ★ 992B↑ 82B↓ size ★ 10↑ 2↓ headers ★ 0 cookies
  ┌ ↑ raw ★ 628B
  │ {
  │   "id": -61316587,
  │   "start": "2022-06-08T10:00:00",
  │   "end": "2022-06-10T09:00:00",
  │   "prices": 15,
  │   "car": {
  │     "id": {{carId}},
  │     "brand": "Skoda",
  │     "model": "Fabia",
  │     "vrp": "BA111AA",
  │     "owner": {
  │       "id": {{userId}},
  │       "firstName": "Jozko",
  │       "lastName": "Mkrvicka",
  │       "email": "jozo.mrkvicka@stuba.sk",
  │       "cars": [
  │         {
  │           "id": {{carId}}
  │         }
  │       ]
  │     },
  │     "colour": "Green",
  │     "reservations": []
  │   },
  │   "spot": {
  │     "id": {{parkingSpotId}},
  │     "identifier": "1.01",
  │     "carParkFloor": "Floor1",
  │     "carPark": ,
  │     "free": false,
  │     "reservations": []
  │   }
  │ }
  └ 
  ┌ ↓ application/json ★ text ★ json ★ utf8 ★ 2B
  │ {}
  └
  prepare   wait    dns-lookup   tcp-handshake   transfer-start   download   process   total 
  2ms       553µs   (cache)      (cache)         5ms              2ms        82µs      9ms   

  [14:17:11] 6. createReservation

→ Update reservation
  [16. 6. 2022, 14:17:11]  PUT http://localhost:8080/reservations/{{reservationId}}  
  405 Method Not Allowed ★ 6ms time ★ 1.01kB↑ 74B↓ size ★ 10↑ 2↓ headers ★ 0 cookies
  ┌ ↑ raw ★ 622B
  │ {
  │   "id": {{reservationId}},
  │   "start": "2022-06-08T10:00:00",
  │   "end": null,
  │   "prices":null,
  │     "car": {
  │     "id": {{carId}},
  │     "brand": "Skoda",
  │     "model": "Fabia",
  │     "vrp": "BA111AA",
  │     "owner": {
  │       "id": {{userId}},
  │       "firstName": "Jozko",
  │       "lastName": "Mkrvicka",
  │       "email": "jozo.mrkvicka@stuba.sk",
  │       "cars": [
  │         {
  │           "id": {{carId}}
  │         }
  │       ]
  │     },
  │     "colour": "Green",
  │     "reservations": []
  │   },
  │   "spot": {
  │     "id": {{parkingSpotId}},
  │     "identifier": "1.01",
  │     "carParkFloor": "Floor1",
  │     "carPark": ,
  │     "free": false,
  │     "reservations": []
  │   }
  │ }
  └ 
  ↓ text/plain ★ text ★ plain ★ utf8

  prepare   wait    dns-lookup   tcp-handshake   transfer-start   download   process   total 
  1ms       454µs   (cache)      (cache)         2ms              1ms        45µs      6ms   

  [14:17:11] 7. getReservation

→ Get reservation by id Copy
  [16. 6. 2022, 14:17:11]  GET http://localhost:8080/reservations/{{reservationId}}  
  404 Not Found ★ 7ms time ★ 336B↑ 45B↓ size ★ 8↑ 1↓ headers ★ 0 cookies
  ↓ text/plain ★ text ★ plain ★ utf8

  prepare   wait    dns-lookup   tcp-handshake   transfer-start   download   process   total 
  1ms       537µs   (cache)      (cache)         4ms              1ms        40µs      8ms   

  [14:17:11] 8. getReservation

┌─────────────────────────┬──────────────────┬─────────────────┐
│                         │         executed │          failed │
├─────────────────────────┼──────────────────┼─────────────────┤
│              iterations │                1 │               0 │
├─────────────────────────┼──────────────────┼─────────────────┤
│                requests │               10 │               0 │
├─────────────────────────┼──────────────────┼─────────────────┤
│            test-scripts │               20 │               0 │
├─────────────────────────┼──────────────────┼─────────────────┤
│      prerequest-scripts │               10 │               0 │
├─────────────────────────┼──────────────────┼─────────────────┤
│              assertions │                8 │               8 │
├─────────────────────────┴──────────────────┴─────────────────┤
│ total run duration: 1120ms                                   │
├──────────────────────────────────────────────────────────────┤
│ total data received: 10B (approx)                            │
├──────────────────────────────────────────────────────────────┤
│ average response time: 9ms [min: 5ms, max: 36ms, s.d.: 8ms]  │
├──────────────────────────────────────────────────────────────┤
│ average DNS lookup time: 3ms [min: 3ms, max: 3ms, s.d.: 0µs] │
├──────────────────────────────────────────────────────────────┤
│ average first byte time: 4ms [min: 2ms, max: 9ms, s.d.: 1ms] │
└──────────────────────────────────────────────────────────────┘

  #  failure         detail                                                                        
                                                                                                   
 1.  AssertionError  createAndSetCarParkId                                                         
                     expected undefined to be a number                                             
                     at assertion:0 in test-script                                                 
                     inside "Create new car park Copy"                                             
                                                                                                   
 2.  AssertionError  createCarType                                                                 
                     expected response to have status code 201 but got 401                         
                     at assertion:0 in test-script                                                 
                     inside "Create car type Copy"                                                 
                                                                                                   
 3.  AssertionError  createParkingSpotWithType                                                     
                     expected response to have status code 201 but got 404                         
                     at assertion:0 in test-script                                                 
                     inside "Create parking spot for given car park and given car park floor Copy" 
                                                                                                   
 4.  AssertionError  createUser                                                                    
                     expected response to have status code 201 but got 401                         
                     at assertion:0 in test-script                                                 
                     inside "Create user Copy"                                                     
                                                                                                   
 5.  AssertionError  createCar                                                                     
                     expected response to have status code 201 but got 401                         
                     at assertion:0 in test-script                                                 
                     inside "Create car Copy"                                                      
                                                                                                   
 6.  AssertionError  createReservation                                                             
                     expected response to have status code 201 but got 401                         
                     at assertion:0 in test-script                                                 
                     inside "Create new reservation Copy"                                          
                                                                                                   
 7.  AssertionError  getReservation                                                                
                     expected response to have status code 200 but got 405                         
                     at assertion:0 in test-script                                                 
                     inside "Update reservation"                                                   
                                                                                                   
 8.  AssertionError  getReservation                                                                
                     expected response to have status code 200 but got 404                         
                     at assertion:0 in test-script                                                 
                     inside "Get reservation by id Copy"                                           

-----------------------

updateUser

→ Create user
  [16. 6. 2022, 14:17:13]  POST http://localhost:8080/users  
  201 Created ★ 42ms time ★ 463B↑ 171B↓ size ★ 10↑ 2↓ headers ★ 0 cookies
  ┌ ↑ raw ★ 122B
  │ {
  │   "id": -92119638,
  │   "firstName": "Jozko",
  │   "lastName": "Mkrvicka",
  │   "email": "jozo.mrkvicka@stuba.sk",
  │   "cars": []
  │ }
  └ 
  ┌ ↓ application/json ★ text ★ json ★ utf8 ★ 95B
  │ {"id":130,"firstName":"Jozko","lastName":"Mkrvicka","e
  │ mail":"jozo.mrkvicka@stuba.sk","cars":[]}
  └
  prepare   wait   dns-lookup   tcp-handshake   transfer-start   download   process   total 
  39ms      9ms    2ms          1ms             19ms             8ms        500µs     80ms  

  [14:17:13]  √  createUser

→ Update user
  [16. 6. 2022, 14:17:13]  PUT http://localhost:8080/users/130  
  405 Method Not Allowed ★ 7ms time ★ 449B↑ 81B↓ size ★ 10↑ 2↓ headers ★ 0 cookies
  ┌ ↑ raw ★ 105B
  │ {
  │   "id": 130,
  │   "firstName": "John",
  │   "lastName": "Doe",
  │   "email": "john.doe@stuba.sk",
  │   "cars": []
  │ }
  └ 
  ↓ text/plain ★ text ★ plain ★ utf8

  prepare   wait    dns-lookup   tcp-handshake   transfer-start   download   process   total 
  1ms       811µs   (cache)      (cache)         2ms              3ms        129µs     8ms   

  [14:17:13] 1. updateUser

→ Get user by id
  [16. 6. 2022, 14:17:13]  GET http://localhost:8080/users/130  
  200 OK ★ 10ms time ★ 291B↑ 166B↓ size ★ 8↑ 2↓ headers ★ 0 cookies
  ┌ ↓ application/json ★ text ★ json ★ utf8 ★ 95B
  │ {"id":130,"firstName":"Jozko","lastName":"Mkrvicka","e
  │ mail":"jozo.mrkvicka@stuba.sk","cars":[]}
  └
  prepare   wait    dns-lookup   tcp-handshake   transfer-start   download   process   total 
  1ms       395µs   (cache)      (cache)         7ms              1ms        63µs      11ms  

  [14:17:14] 2. getUser

┌─────────────────────────┬──────────────────┬──────────────────┐
│                         │         executed │           failed │
├─────────────────────────┼──────────────────┼──────────────────┤
│              iterations │                1 │                0 │
├─────────────────────────┼──────────────────┼──────────────────┤
│                requests │                3 │                0 │
├─────────────────────────┼──────────────────┼──────────────────┤
│            test-scripts │                6 │                0 │
├─────────────────────────┼──────────────────┼──────────────────┤
│      prerequest-scripts │                3 │                0 │
├─────────────────────────┼──────────────────┼──────────────────┤
│              assertions │                3 │                2 │
├─────────────────────────┴──────────────────┴──────────────────┤
│ total run duration: 469ms                                     │
├───────────────────────────────────────────────────────────────┤
│ total data received: 190B (approx)                            │
├───────────────────────────────────────────────────────────────┤
│ average response time: 19ms [min: 7ms, max: 42ms, s.d.: 15ms] │
├───────────────────────────────────────────────────────────────┤
│ average DNS lookup time: 2ms [min: 2ms, max: 2ms, s.d.: 0µs]  │
├───────────────────────────────────────────────────────────────┤
│ average first byte time: 9ms [min: 2ms, max: 19ms, s.d.: 6ms] │
└───────────────────────────────────────────────────────────────┘

  #  failure         detail                                                
                                                                           
 1.  AssertionError  updateUser                                            
                     expected response to have status code 200 but got 405 
                     at assertion:0 in test-script                         
                     inside "Update user"                                  
                                                                           
 2.  AssertionError  getUser                                               
                     expected 'Jozko' to deeply equal 'John'               
                     at assertion:0 in test-script                         
                     inside "Get user by id"                               

-----------------------

